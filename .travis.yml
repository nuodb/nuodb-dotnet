language: csharp
mono: latest
dotnet: 5.0
sudo: required
env:
  global:
    - TZ=America/New_York
    - NUO_DOWNLOAD=https://ce-downloads.nuohub.org
    - NUO_PREFIX=nuodb-ce
    - NUO_SET_TLS=disable
    - NUODB_HOME=/opt/nuodb

notifications:
  recipients:
    - drivers@nuodb.com

before_install:
  - echo madvise | sudo tee /sys/kernel/mm/transparent_hugepage/enabled >/dev/null
  - echo madvise | sudo tee /sys/kernel/mm/transparent_hugepage/defrag >/dev/null
  - wget -q "$NUO_DOWNLOAD/supportedversions.txt" --output-document=/tmp/supportedversions.txt
  - wget -q "$NUO_DOWNLOAD/${NUO_PREFIX}_$(tail -n1 /tmp/supportedversions.txt)_amd64.deb" --output-document=/var/tmp/nuodb.deb
  - sudo dpkg -i /var/tmp/nuodb.deb
  - echo "NuoDB Version:" && $NUODB_HOME/bin/nuodb --version

before_script:
  - sudo -n $NUODB_HOME/etc/nuoadmin tls $NUO_SET_TLS
  - sudo -n systemctl start nuoadmin
  # In a future state, this could be done by the test harness using the driver itself as it is in the python repo
  - $NUODB_HOME/bin/nuocmd create archive --db-name test --archive-path /var/tmp/nuodb --server-id `$NUODB_HOME/bin/nuocmd get servers | awk -F, '{print $5}' | awk -F= '{print $2}'`
  - $NUODB_HOME/bin/nuocmd create database --db-name test --dba-user dba --dba-password goalie
  - $NUODB_HOME/bin/nuocmd start process --engine-type TE --db-name test --this-server

script:
  - xbuild /p:TargetFrameworkProfile="" /p:Configuration=Release ADO.NET.Mono.sln
  - mono ConsoleSample/bin/Release/ConsoleSample.exe test
  - mono NUnitTestProject/bin/Release/NUnitTestProject.exe
  - dotnet build ADO.NET.Core.sln
  - dotnet ConsoleSample/bin/Release/netcoreapp5.0/ConsoleSampleCore.dll test

after_failure:
  - cat /var/log/nuodb/nuoadmin.log*
  - grep ssl /etc/nuodb/nuoadmin.conf
